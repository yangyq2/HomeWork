面向对象作业二：

一、定义普通人、学生、教师、学校四个类
要求：
1.提供适当的成员变量和方法；
2.具有良好的封装性；
3.提供无参数和有参数的重载构造函数；
4.提供测试类，定义相应的对象并调用相应的方法。

提示：
请按照以下要求设计一个学生类Student，并进行测试，要求如下：
（1）Student类中包含姓名、成绩两个私有属性；
（2）分别给这两个私有属性定义两个public方法，一个setXxx（）方法用于设置值，一个getXxx（）方法用于获取值；
（3）为Student类定义一个无参的构造方法和一个接收两个参数的构造方法，两个参数分别为姓名和成绩属性赋值；
（4）在Student类中定义一个成员方法speak()，表示学生说话的行为，在方法中访问name和age两个成员变量，输出学生的姓名和年龄
5）在测试类中创建两个Student对象，一个使用无参的构造方法，然后调用方法给成绩和姓名赋值，另一个使用有参的构造方法，在构造方法中给姓名和成绩赋值，然后分别调用speak（）方法。
6）仿照以上步骤，分别定义普通人、教师、学校三个类。

二、递归算法
1、利用递归算法求解 n！=n*（n-1）！
2、利用递归算法求解斐波那契数列 f(1)=1  f(2)=1
   f(n) = f(n-1) + f(n-2)

提示：递归概念
递归本质：程序调用自身的编程技巧叫做递归。
程序调用自身的编程技巧称为递归（ recursion）。递归做为一种算法在程序设计语言中广泛应用。 一个过程或函数在其定义或说明中有直接或间接调用自身的一种方法，它通常把一个大型复杂的问题层层转化为一个与原问题相似的规模较小的问题来求解，递归策略只需少量的程序就可描述出解题过程所需要的多次重复计算，大大地减少了程序的代码量。递归的能力在于用有限的语句来定义对象的无限集合。
   递归是调用自身的一种方法，它通常把一个大型复杂的问题层层转化为一个与原问题相似的规模较小的问题来求解，递归策略只需少量的程序就可描述出解题过程所需要的多次重复计算，大大地减少了程序的代码量。递归的能力在于用有限的语句来定义对象的无限集合。

递归的三个条件：
边界条件
递归前进段
递归返回段
当边界条件不满足时，递归前进；当边界条件满足时，递归返回


三、请编码实现动物世界的继承关系：
动物（Animal）具有行为：吃（eat）、睡觉（sleep）
动物包括：兔子（Rabbit），老虎（Tiger）
这些动物吃的行为各不相同（兔子吃草，老虎吃肉）；但睡觉的行为是一致的。
请通过继承实现以上需求，并编写测试类AnimalTest进行测试。

四、分别定义一个成员内部类、方法内部类、静态内部类、匿名内部类，并编写测试类进行测试